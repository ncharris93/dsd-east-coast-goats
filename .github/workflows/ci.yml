name: CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run tsc

      - name: Run tests
        run: npm test

      - name: Build
        run: npm run build

  test-migrations:
    name: Test Migrations
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Database Migrations
        run: |
          # Check if migrations exist
          if [ -d "supabase/migrations" ] && [ "$(ls -A supabase/migrations)" ]; then
            echo "Testing migration files..."
            
            # Install PostgreSQL client
            sudo apt-get update
            sudo apt-get install -y postgresql-client
            
            # Set connection string
            export DATABASE_URL="postgresql://postgres:postgres@localhost:5432/test"
            
            # Run each migration file in order
            for migration in supabase/migrations/*.sql; do
              if [ -f "$migration" ]; then
                echo "Applying migration: $(basename $migration)"
                psql $DATABASE_URL -f "$migration"
              fi
            done
            
            echo "âœ… All migrations applied successfully"
          else
            echo "No migrations to validate"
          fi
