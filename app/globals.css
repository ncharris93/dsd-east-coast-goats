@import 'tailwindcss';

@plugin 'tailwindcss-animate';

@custom-variant dark (&:is(.dark *));

@theme {
  /* This is where we declare our custom variables and their name */
  /* custom varialbe: name */

  --color-background: var(--background);
  --color-foreground: var(--foreground);

  --color-card-1: var(--card-1);
  --color-card-2: var(--card-2);
  --color-card-3: var(--card-3);
  --color-card-4: var(--card-4);
  --color-card-foreground: var(--card-foreground);

  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);

  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);

  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);

  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);

  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);

  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);

  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --color-cta: var(--cta);
  --color-cta-foreground: var(--cta-foreground);

  --color-chart-1: var(--chart-1);
  --color-chart-2: var(--chart-2);
  --color-chart-3: var(--chart-3);
  --color-chart-4: var(--chart-4);
  --color-chart-5: var(--chart-5);

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --font-sans: var(--font-inter-sans), system-ui, Arial, Helvetica, sans-serif;
}

@layer base {
  :root {
    --background: hsl(40, 33%, 96%);
    --foreground: hsl(210 22% 20%);
    --card-1: hsl(355 20% 81%);
    --card-2: hsl(75 7% 90%);
    --card-3: hsl(20, 33%, 93%);
    --card-4: hsl(170 10% 84%);
    --card-foreground: hsl(210 22% 20%);
    --popover: hsl(42 33% 94%);
    --popover-foreground: hsl(210 22% 20%);
    --primary: hsl(342 63% 30%);
    --primary-foreground: hsl(40 33% 96%);
    --secondary: hsl(189 31% 32%);
    --secondary-foreground: hsl(40 33% 96%);
    --muted: hsl(42 14% 93%);
    --muted-foreground: hsl(210 22% 20%);
    --accent: hsl(27, 100%, 33%);
    --accent-foreground: hsl(40 33% 96%);
    --destructive: hsl(0 60% 45%);
    --destructive-foreground: hsl(40 33% 96%);
    --border: hsl(0 0% 89.8%);
    --input: hsl(42 14% 93%);
    --ring: hsl(210 22% 20%);
    --cta: hsl(342 63% 30%);
    --cta-foreground: hsl(40 33% 96%);
    --chart-1: hsl(12 76% 55%);
    --chart-2: hsl(172 35% 36%);
    --chart-3: hsl(207 23% 38%);
    --chart-4: hsl(44 72% 58%);
    --chart-5: hsl(27 78% 48%);
    --radius: 0.5rem;
  }

  .dark {
    --background: hsl(210 22% 20%);
    --foreground: hsl(40 33% 96%);
    --card-1: hsl(305 12% 29%);
    --card-2: hsl(206 22% 23%);
    --card-3: hsl(225 15% 23%);
    --card-4: hsl(200 21% 27%);
    --card-foreground: hsl(40 33% 96%);
    --popover: hsl(210 22% 20%);
    --popover-foreground: hsl(40 33% 96%);
    --primary: hsl(340 86% 70%);
    --primary-foreground: hsl(210 22% 20%);
    --secondary: hsl(188 24% 55%);
    --secondary-foreground: hsl(210 22% 20%);
    --muted: hsl(212 17% 24%);
    --muted-foreground: hsl(40 33% 96%);
    --accent: hsl(6 74% 70%);
    --accent-foreground: hsl(210 22% 20%);
    --destructive: hsl(0 60% 38%);
    --destructive-foreground: hsl(40 33% 96%);
    --border: hsl(212 17% 24%);
    --input: hsl(212 17% 24%);
    --ring: hsl(342 63% 60%);
    --cta: hsl(342 63% 30%);
    --cta-foreground: hsl(40 33% 96%);
    --chart-1: hsl(12 60% 60%);
    --chart-2: hsl(172 35% 50%);
    --chart-3: hsl(207 23% 55%);
    --chart-4: hsl(44 72% 60%);
    --chart-5: hsl(27 78% 60%);
  }
}

@layer base {
  * {
    @apply border-border;
  }
  html {
    @apply scroll-smooth motion-reduce:scroll-auto;
  }
  body {
    @apply bg-background text-foreground antialiased;
  }
}

.AccordionChevron {
  transition: transform 300ms;
}
.AccordionTrigger[data-state='open'] > .AccordionChevron {
  transform: rotate(180deg);
}

.AccordionContent {
  overflow: hidden;
}
.AccordionContent[data-state='open'] {
  animation: slideDown 300ms ease-out;
}
.AccordionContent[data-state='closed'] {
  animation: slideUp 300ms ease-out;
}

@keyframes slideDown {
  from {
    height: 0;
  }
  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes slideUp {
  from {
    height: var(--radix-accordion-content-height);
  }
  to {
    height: 0;
  }
}
.spinner-animation {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
